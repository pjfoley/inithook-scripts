#!/bin/bash
####################################################################
#  This script will setup the user accounts                        #
####################################################################
set -o errexit
set -o nounset

# Load defaults for script if file exists
[ -e /etc/default/inithook-scripts/setup-users-home ] && . /etc/default/inithook-scripts/setup-users-home

declare -A pubkey
declare -A dotfiles_defaults
declare -A dotfiles_clone

pubkey="${pubkey:=}"
dotfiles_defaults="${dotfiles_defaults:=}"
dotfiles_clone="${dotfiles_clone:=}"

AUTH_FILE="${AUTH_FILE:=~/.ssh/authorized_keys}"

###############################################################
#  No tunables below this point                               #
###############################################################

echo "SETUP - Setting up users"

if [[ "$EUID" -ne "0" ]]; then
  echo $'\t'"* This script must be run as root..."
  echo "Exiting..."
  exit 1
fi

f_CURRENT_DIR="${PWD}"
for l_home in ${USERS} ; do
  [ ! -e $l_home ] && continue

  set +o nounset
  l_user="$(basename $l_home)"
  l_pubkey="${pubkey[$l_home]}"
  l_defaults="${dotfiles_defaults[$l_home]}"
  l_dotfiles="${dotfiles_clone[$l_home]}"
  set -o nounset
  
  sudo -u $l_user bash << EOF
    cd ~
    mkdir -p $(dirname $AUTH_FILE) && chmod 700 $(dirname $AUTH_FILE) && touch $AUTH_FILE && chmod 600 $AUTH_FILE

    if [[ -n "${l_pubkey}" ]] ; then wget -qO- $l_pubkey >> $AUTH_FILE ; fi

    if [[ -n "${l_defaults}" ]] ; then wget -qO- $l_defaults | bash ; fi

    if [[ -n "${l_dotfiles}" ]] ; then wget -qO- $l_dotfiles | bash ; fi
EOF
done

cd "${f_CURRENT_DIR}"

echo "Finished - Setting up users"
